{
    "project": {
        "name": "Bella API",
        "description": "Bella API: An API Authentication for node.js",
        "version": "0.5.0",
        "url": "https://github.com/chrisenytc/bella"
    },
    "files": {
        "lib/bella.js": {
            "name": "lib/bella.js",
            "modules": {},
            "classes": {
                "Bella": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Bella": {
            "name": "Bella",
            "shortname": "Bella",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/bella.js",
            "line": 19,
            "is_constructor": 1,
            "example": [
                "\n\n    app.use(bella.init(mongoose, {connection: conn, uri: dbUri, status: true, model: userModel}));"
            ],
            "params": [
                {
                    "name": "mongoose",
                    "description": "Mongoose instance",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Options for Bella",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a middleware",
                "type": "Function"
            }
        }
    },
    "classitems": [
        {
            "file": "lib/bella.js",
            "line": 83,
            "description": "Method responsible for creating the access_tokens to be used by the authentication system",
            "example": [
                "\n\n    bella.create(req.user, ['user', 'create_article'], '127.0.0.1', 'example.com', function(err, access_token) {\n      console.log('Token: ' + access_token);\n    });"
            ],
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "user",
                    "description": "A user",
                    "type": "Object"
                },
                {
                    "name": "permissions",
                    "description": "A array list of permissions",
                    "type": "String"
                },
                {
                    "name": "ip",
                    "description": "A new Ip",
                    "type": "String"
                },
                {
                    "name": "domain",
                    "description": "A new Domain",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "A callback with the error and a new access_token",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns a callback",
                "type": "Function"
            },
            "class": "Bella"
        },
        {
            "file": "lib/bella.js",
            "line": 131,
            "description": "Method responsible for removing users",
            "example": [
                "\n\n    bella.remove('YOUR ACCESS TOKEN', function(err, access_token) {\n      console.log('Token: ' + access_token + 'Deleted');\n    });"
            ],
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "access_token",
                    "description": "A Access Token generated by create method",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "A callback with the error",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns a callback",
                "type": "Function"
            },
            "class": "Bella"
        },
        {
            "file": "lib/bella.js",
            "line": 169,
            "description": "Method responsible for authenticating access the API.\nOnly users with Access Token, Domain and IP authenticated can access the API.",
            "example": [
                "\n\n    app.configure(function() {\n      app.use(bella(mongoose, {connection: mongooseConnection, status: false, model: userModel}));\n      app.use(bella.authenticate());\n    });\n\n    //OR\n\n    app.get('/users', bella.authenticate('user'), ctrl);"
            ],
            "itemtype": "method",
            "name": "authenticate",
            "params": [
                {
                    "name": "permission",
                    "description": "The required permission",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns a middleware",
                "type": "Function"
            },
            "class": "Bella"
        }
    ],
    "warnings": []
}